# -*- coding: UTF-8 -*-

import requests
import json
import time
# import re
# import string
# import urllib3
# import collections


class Falcon(object):

    def __init__(self):
        self.url = 'http://IP:8080/api/v1'
        self.username = 'user'
        self.password = '123456'
        self.headers = self.get_token()
        self.curr_time = int(time.time())

    def get_token(self):
        payload = dict(name=self.username, password=self.password)
        resp = requests.post(self.url + '/user/login', data=payload)
        sig = resp.json().get('sig')
        name = resp.json().get('name')
        header = {'Apitoken': json.dumps({'name': name, 'sig': sig})}
        return header

    def fatch(self, payload):
        resp = requests.post(self.url + '/influx/history', json=payload, headers=self.headers)
        resp.raise_for_status()
        result = resp.json()[0]

        data = [int(i['value']) for i in result['Values'] if i['value']]
        return data

    def get_history(self, tag):
        time_frame = {
            'a': {'start_time': int(self.curr_time - 3600*6), 'end_time': self.curr_time},
            'b': {'start_time': int(self.curr_time - 60*60*24 - 3600*6), 'end_time': self.curr_time - 60*60*24 + 3600*6},
            'c': {'start_time': int(self.curr_time - 60*60*24*7 - 3600*6), 'end_time': self.curr_time - 60*60*24*7 + 3600*6},
        }
        ts = time_frame[tag]
    
        payload = {
            "step": 60,
            "start_time": ts['start_time'],
            "hostnames": [
                "ali-c-pe-openfalcon01.bj"
            ],
            "end_time": ts['end_time'],
            "counters": [         
                "cpu.idle",
            ],
            "consol_fun": "AVERAGE"
        }
        print(tag, payload)
        return self.fatch(payload)

    def run(self):
        # 前后180分钟
        data_A = self.get_history('a')[-181:]
        data_B = self.get_history('b')
        data_C = self.get_history('c')
        data_B = data_B[(len(data_B) - 361)/2:-(len(data_B) - 361)/2]
        data_C = data_C[(len(data_C) - 361)/2:-(len(data_C) - 361)/2]

        # print(data_A)
        # print(data_B)
#         data_C = [2289,2282,2387,2401,2386,2331,2372,2378,2324,2274,2177,2212,2288,2204,2301,2235,2231,2322,2235,2287,2226,2317,2219,2277,2283,2258,2221,2405,2331,2422,2255,2284,2351,2682,2372,2330,2426,2430,2424,2270,2270,2536,2523,2285,2393,2254,2603,2350,2201,2248,2332,2294,2235,2300,2406,2451,2498,2572,2425,2352,2451,2401,2490,2530,2335,2380,2432,2427,2469,2375,2355,2453,2399,2416,2350,2405,2477,2362,2505,2517,2370,2447,2395,2464,2381,2471,2483,2504,2542,2588,2584,2541,2634,2569,2531,2582,2588,2625,2518,2659,2623,2636,2671,2814,2721,2665,2727,2750,2843,2784,2856,2803,2869,2910,2834,2857,2826,2957,2858,2918,2875,2987,2919,2943,3010,3049,3272,3111,3157,3232,3028,3196,3425,3371,3116,3111,3115,3148,3073,3264,3123,3162,3103,3285,3352,3114,3177,3191,3220,3293,3323,3301,3398,3316,3504,3417,3484,3601,3457,3585,3669,3576,3776,3771,3744,3568,3688,3575,3752,3629,3665,3590,3704,3641,3599,3828,3812,3743,3625,3887,3631,3797,3785,3625,3704,3822,3936,3835,3910,3807,3820,3779,3786,3850,3792,3756,3867,3873,3750,3753,3932,3775,3841,3950,4088,4105,4003,4005,4145,4112,4001,3897,3893,3827,3950,4026,4125,4321,4233,4232,4166,4098,4122,4179,4122,4258,4260,4341,4125,4069,4213,4178,4228,4242,4095,3982,4144,4041,4227,4192,3974,4068,4104,4034,4101,4083,4200,4142,4141,4162,4093,4084,4095,4102,4032,4018,4066,4131,4082,4016,4105,4045,3986,3959,3925,3904,3933,3902,3845,3816,4087,3994,4025,4040,3982,3949,4208,4249,4168,4027,4112,4200,4096,4233,4028,4030,4038,4006,3981,3816,3930,3936,3848,3997,4068,3942,3914,3816,3848,3746,3853,3722,3846,3749,3706,3672,3755,3799,3699,3665,3731,3873,3851,3759,3682,3590,3766,3565,3700,3667,3723,3627,3796,3608,3695,3715,3596,3563,3680,3510,3572,3622,3387,3532,3611,3731,3742,3784,3688,3582,3713,3684,3739,3653,3586,3473,3475,3580,3446,3526,3520,3396,3450,3547,3381,3359,3299,3442,3416,3246,3327]        
#         data_B = [2146,2283,2151,2225,2159,2180,2135,2219,2185,2222,2194,2224,2132,2222,2236,2261,2278,2215,2166,2248,2219,2284,2309,2285,2236,2283,2254,2257,2250,2187,2267,2257,2239,2209,2286,2477,2292,2325,2276,2291,2248,2338,2356,2286,2266,2250,2278,2335,2316,2265,2170,2322,2266,2286,2169,2308,2430,2304,2320,2380,2305,2371,2274,2334,2382,2477,2589,2380,2433,2385,2404,2484,2526,2467,2505,2665,2686,2646,2786,2701,2873,2770,2851,2680,2703,2770,2887,2902,2951,2985,3021,3057,3076,3073,2964,3005,3031,2973,2973,3006,3017,2915,2977,3005,3010,2894,2908,2874,2780,2851,2850,2957,2818,2928,2824,2739,2950,2838,2787,2904,2878,2912,2893,2845,2799,2970,2975,3037,3067,2880,2971,2928,3050,2997,3091,3088,3011,3243,3149,3165,3068,3198,3273,3168,3065,3213,3306,3238,3172,3320,3157,3124,3315,3310,3289,3307,3556,3579,3608,3540,3386,3478,3465,3482,3463,3554,3387,3414,3358,3415,3357,3512,3521,3439,3460,3465,3603,3515,3479,3542,3551,3658,3478,3492,3530,3652,3784,3693,3924,3677,3704,3761,3635,3629,3652,3680,3774,3627,3721,3718,4072,3696,3695,3788,3950,4075,4151,4171,3999,3879,3939,3850,3861,3934,3871,4059,4326,4171,4095,4081,4056,3964,3863,3952,3992,3890,3856,3742,3883,3870,3811,3954,3923,3926,3888,3879,3989,3820,3847,3883,3893,3862,3845,3654,3801,4052,3945,3914,3909,3866,3852,4012,3855,3816,3867,3994,3886,3814,3875,3757,3680,3808,3754,3760,3808,3662,3550,3683,3744,3791,3651,3626,3789,3785,3811,3952,4003,3934,4009,3833,3855,3760,3877,3835,3838,3778,3734,3735,3764,3681,3650,3695,3657,3627,3684,3639,3646,3527,3679,3711,3604,3463,3651,3603,3735,3783,3808,3765,3762,3878,3866,3911,3760,3747,3554,3584,3670,3624,3664,3679,3524,3603,3606,3531,3534,3527,3532,3587,3542,3531,3503,3401,3553,3468,3396,3580,3732,3745,3882,3739,3691,3740,3476,3435,3583,3464,3389,3315,3283,3319,3268,3374,3265,3192,3343,3206,3261,3224,3236,3049,3126]
#         data_A = [2154,2161,2158,2190,2147,2213,2313,2250,2172,2085,2160,2285,2108,2154,2093,2217,2234,2298,2236,2193,2180,2291,2205,2237,2144,2202,2226,2199,2130,2094,2391,2496,2283,2281,2291,2292,2311,2421,2345,2382,2416,2370,2319,2245,2343,2320,2248,2283,2349,2266,2350,2360,2405,2240,2291,2372,2382,2350,2415,2318,2312,2304,2328,2401,2361,2350,2579,2378,2416,2477,2382,2484,2416,2464,2421,2495,2335,2316,2319,2423,2373,2369,2344,2481,2473,2426,2373,2262,2322,2516,2333,2470,2419,2385,2456,2523,2634,2716,2579,2663,2673,2621,2619,2625,2616,2645,2669,2705,2670,2622,2537,2689,2613,2786,2620,2702,2742,2697,2714,2749,2749,2825,2757,2882,2802,2974,2840,2933,2880,2974,2969,2971,2838,2914,2950,2981,3008,2940,2933,2897,2897,2958,3020,3034,3117,2939,2956,3048,3128,3174,3208,3176,3189,3176,3164,3196,3288,3398,3501,3306,3700,6412,6821,7077,6957,5647,5950,6056,6201,5482,4978,6010,6823,5722,5287,5779,5937,5884,5677,5719,5656]
        

        url = 'http://IP:8080/PredictValue'
        data = {
            "viewId":"2006",
            "viewName":"view_2006",
            "attrId":"12131",
            "attrName":"attr_12131",
            "taskId":"1535790960079",
            "window":180,
            "time": "2018-10-07 18:49:37",
            "dataC":','.join(str(s) for s in data_C),
            "dataB":','.join(str(s) for s in data_B),
            "dataA":','.join(str(s) for s in data_A)
        }

        # print(data)

        data = json.dumps(data)
        r = requests.post(url, data=data)
        print(r.text)
        


def main():
    f = Falcon()
    f.run()


if __name__ == "__main__":
    main()